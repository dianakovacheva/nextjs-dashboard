{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/opengraph-image.png.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 1686, height: 882 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,sHAAA,CAAA,UAAG;IAAE,OAAO;IAAM,QAAQ;AAAI"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/acme-logo.tsx"],"sourcesContent":["import { GlobeAltIcon } from '@heroicons/react/24/outline';\nimport { lusitana } from '@/app/ui/fonts';\n\nexport default function AcmeLogo() {\n  return (\n    <div\n      className={`${lusitana.className} flex flex-row items-center leading-none text-white`}\n    >\n      <GlobeAltIcon className=\"h-12 w-12 rotate-[15deg]\" />\n      <p className=\"text-[44px]\">Acme</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;;AAGe,SAAS;IACtB,qBACE,6WAAC;QACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAErF,6WAAC,8SAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,6WAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;;AAGjC"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/login-form.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/login-form.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/login/page.tsx"],"sourcesContent":["import AcmeLogo from '@/app/ui/acme-logo';\nimport LoginForm from '@/app/ui/login-form';\n \nexport default function LoginPage() {\n  return (\n    <main className=\"flex items-center justify-center md:h-screen\">\n      <div className=\"relative mx-auto flex w-full max-w-[400px] flex-col space-y-2.5 p-4 md:-mt-32\">\n        <div className=\"flex h-20 w-full items-end rounded-lg bg-blue-500 p-3 md:h-36\">\n          <div className=\"w-32 text-white md:w-36\">\n            <AcmeLogo />\n          </div>\n        </div>\n        <LoginForm />\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,6WAAC;QAAK,WAAU;kBACd,cAAA,6WAAC;YAAI,WAAU;;8BACb,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAI,WAAU;kCACb,cAAA,6WAAC,0HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;8BAGb,6WAAC,2HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from \"next-auth\";\n\nexport const authConfig = {\n  pages: {\n    signIn: \"/login\",\n  },\n  callbacks: {\n    authorized({ auth, request: { nextUrl } }) {\n      const isLoggedIn = !!auth?.user;\n      const isOnDashboard = nextUrl.pathname.startsWith(\"/dashboard\");\n      if (isOnDashboard) {\n        if (isLoggedIn) return true;\n        return false; // Redirect unauthenticated users to login page\n      } else if (isLoggedIn) {\n        return Response.redirect(new URL(\"/dashboard\", nextUrl));\n      }\n      return true;\n    },\n  },\n  providers: [], // Add providers with an empty array for now\n} satisfies NextAuthConfig;\n"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAe;gBACjB,IAAI,YAAY,OAAO;gBACvB,OAAO,OAAO,+CAA+C;YAC/D,OAAO,IAAI,YAAY;gBACrB,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YACjD;YACA,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport Credentials from \"next-auth/providers/credentials\";\nimport { authConfig } from \"./auth.config\";\nimport { z } from \"zod\";\nimport { sql } from \"@vercel/postgres\";\nimport type { User } from \"@/app/lib/definitions\";\nimport bcrypt from \"bcrypt\";\n\nasync function getUser(email: string): Promise<User | undefined> {\n  try {\n    const user = await sql<User>`SELECT * FROM users WHERE email=${email}`;\n    return user.rows[0];\n  } catch (error) {\n    console.error(\"Failed to fetch user:\", error);\n    throw new Error(\"Failed to fetch user.\");\n  }\n}\n\nexport const { auth, signIn, signOut } = NextAuth({\n  ...authConfig,\n  providers: [\n    Credentials({\n      async authorize(credentials) {\n        const parsedCredentials = z\n          .object({ email: z.string().email(), password: z.string().min(6) })\n          .safeParse(credentials);\n\n        if (parsedCredentials.success) {\n          const { email, password } = parsedCredentials.data;\n          const user = await getUser(email);\n          if (!user) return null;\n          const passwordsMatch = await bcrypt.compare(password, user.password);\n\n          if (passwordsMatch) return user;\n        }\n\n        console.log(\"Invalid credentials\");\n        return null;\n      },\n    }),\n  ],\n});\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAEA;AANA;AACA;AAEA;AACA;;;;;;;AAIA,eAAe,QAAQ,KAAa;IAClC,IAAI;QACF,MAAM,OAAO,MAAM,uRAAA,CAAA,MAAG,AAAM,CAAC,gCAAgC,EAAE,MAAM,CAAC;QACtE,OAAO,KAAK,IAAI,CAAC,EAAE;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wVAAA,CAAA,UAAQ,AAAD,EAAE;IAChD,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBAAE,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBAAI,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAAG,GAChE,SAAS,CAAC;gBAEb,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,QAAQ;oBAC3B,IAAI,CAAC,MAAM,OAAO;oBAClB,MAAM,iBAAiB,MAAM,+FAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;oBAEnE,IAAI,gBAAgB,OAAO;gBAC7B;gBAEA,QAAQ,GAAG,CAAC;gBACZ,OAAO;YACT;QACF;KACD;AACH"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\nimport { sql } from \"@vercel/postgres\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { signIn } from \"@/auth\";\nimport { AuthError } from \"next-auth\";\n\nconst FormSchema = z.object({\n  id: z.string(),\n  customerId: z.string({\n    invalid_type_error: \"Please select a customer.\",\n  }),\n  amount: z.coerce\n    .number()\n    .gt(0, { message: \"Please enter an amount greater than $0.\" }),\n  status: z.enum([\"pending\", \"paid\"], {\n    invalid_type_error: \"Please select an invoice status.\",\n  }),\n  date: z.string(),\n});\n\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\n\n// Use Zod to update the expected types\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport type State = {\n  errors?: {\n    customerId?: string[];\n    amount?: string[];\n    status?: string[];\n  };\n  message?: string | null;\n};\n\n// Create Invoice\nexport async function createInvoice(prevState: State, formData: FormData) {\n  const validatedFields = CreateInvoice.safeParse({\n    customerId: formData.get(\"customerId\"),\n    amount: formData.get(\"amount\"),\n    status: formData.get(\"status\"),\n  });\n\n  // If form validation fails, return errors early. Otherwise, continue.\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Missing Fields. Failed to Create Invoice.\",\n    };\n  }\n\n  // Prepare data for insertion into the database\n  const { customerId, amount, status } = validatedFields.data;\n  const amountInCents = amount * 100;\n  const date = new Date().toISOString().split(\"T\")[0];\n\n  // Insert data into the database\n  try {\n    await sql`\n    INSERT INTO invoices (customer_id, amount, status, date)\n    VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n  `;\n  } catch (error) {\n    // If a database error occurs, return a more specific error.\n    return {\n      message: \"Database Error: Failed to Create Invoice.\",\n    };\n  }\n\n  // After updating the database, the /dashboard/invoices path will be revalidated,\n  // and fresh data will be fetched from the server\n  revalidatePath(\"/dashboard/invoices\");\n\n  // Redirect to the /dashboard/invoices route on submission\n  redirect(\"/dashboard/invoices\");\n}\n\n// Update Invoice\nexport async function updateInvoice(\n  id: string,\n  prevState: State,\n  formData: FormData\n) {\n  const validatedFields = UpdateInvoice.safeParse({\n    customerId: formData.get(\"customerId\"),\n    amount: formData.get(\"amount\"),\n    status: formData.get(\"status\"),\n  });\n\n  // If form validation fails, return errors early. Otherwise, continue.\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Missing Fields. Failed to Update Invoice.\",\n    };\n  }\n\n  // Prepare data for insertion into the database\n  const { customerId, amount, status } = validatedFields.data;\n  const amountInCents = amount * 100;\n\n  // Insert data into the database\n  try {\n    await sql`\n    UPDATE invoices\n    SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n    WHERE id = ${id}\n  `;\n  } catch (error) {\n    // If a database error occurs, return a more specific error.\n    return {\n      message: \"Database Error: Failed to Update Invoice.\",\n    };\n  }\n\n  revalidatePath(\"/dashboard/invoices\");\n  redirect(\"/dashboard/invoices\");\n}\n\n// Delete Invoice\nexport async function deleteInvoice(id: string) {\n  try {\n    await sql`DELETE FROM invoices WHERE id = ${id}`;\n    revalidatePath(\"/dashboard/invoices\");\n  } catch (error) {\n    return {\n      message: \"Database Error: Failed to Delete Invoice.\",\n    };\n  }\n}\n\n// User Authentication\nexport async function authenticate(\n  prevState: string | undefined,\n  formData: FormData\n) {\n  try {\n    await signIn(\"credentials\", formData);\n  } catch (error) {\n    if (error instanceof AuthError) {\n      switch (error.type) {\n        case \"CredentialsSignin\":\n          return \"Invalid credentials.\";\n        default:\n          return \"Something went wrong.\";\n      }\n    }\n    throw error;\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}