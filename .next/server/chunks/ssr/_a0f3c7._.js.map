{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/lib/utils.ts"],"sourcesContent":["import { Revenue } from \"./definitions\";\n\nexport const formatCurrency = (amount: number) => {\n  return (amount / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n};\n\nexport const formatDateToLocal = (\n  dateStr: string,\n  locale: string = \"en-US\"\n) => {\n  const date = new Date(dateStr);\n  const options: Intl.DateTimeFormatOptions = {\n    day: \"numeric\",\n    month: \"short\",\n    year: \"numeric\",\n  };\n  const formatter = new Intl.DateTimeFormat(locale, options);\n  return formatter.format(date);\n};\n\nexport const generateYAxis = (revenue: Revenue[]) => {\n  // Calculate what labels we need to display on the y-axis\n  // based on highest record and in 1000s\n  const yAxisLabels = [];\n  const highestRecord = Math.max(...revenue.map((month) => month.revenue));\n  const topLabel = Math.ceil(highestRecord / 1000) * 1000;\n\n  for (let i = topLabel; i >= 0; i -= 1000) {\n    yAxisLabels.push(`$${i / 1000}K`);\n  }\n\n  return { yAxisLabels, topLabel };\n};\n\nexport const generatePagination = (currentPage: number, totalPages: number) => {\n  // If the total number of pages is 7 or less,\n  // display all pages without any ellipsis.\n  if (totalPages <= 7) {\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\n  }\n\n  // If the current page is among the first 3 pages,\n  // show the first 3, an ellipsis, and the last 2 pages.\n  if (currentPage <= 3) {\n    return [1, 2, 3, \"...\", totalPages - 1, totalPages];\n  }\n\n  // If the current page is among the last 3 pages,\n  // show the first 2, an ellipsis, and the last 3 pages.\n  if (currentPage >= totalPages - 2) {\n    return [1, 2, \"...\", totalPages - 2, totalPages - 1, totalPages];\n  }\n\n  // If the current page is somewhere in the middle,\n  // show the first page, an ellipsis, the current page and its neighbors,\n  // another ellipsis, and the last page.\n  return [\n    1,\n    \"...\",\n    currentPage - 1,\n    currentPage,\n    currentPage + 1,\n    \"...\",\n    totalPages,\n  ];\n};\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,CAAC,SAAS,GAAG,EAAE,cAAc,CAAC,SAAS;QAC5C,OAAO;QACP,UAAU;IACZ;AACF;AAEO,MAAM,oBAAoB,CAC/B,SACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAsC;QAC1C,KAAK;QACL,OAAO;QACP,MAAM;IACR;IACA,MAAM,YAAY,IAAI,KAAK,cAAc,CAAC,QAAQ;IAClD,OAAO,UAAU,MAAM,CAAC;AAC1B;AAEO,MAAM,gBAAgB,CAAC;IAC5B,yDAAyD;IACzD,uCAAuC;IACvC,MAAM,cAAc,EAAE;IACtB,MAAM,gBAAgB,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO;IACtE,MAAM,WAAW,KAAK,IAAI,CAAC,gBAAgB,QAAQ;IAEnD,IAAK,IAAI,IAAI,UAAU,KAAK,GAAG,KAAK,KAAM;QACxC,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC;IAClC;IAEA,OAAO;QAAE;QAAa;IAAS;AACjC;AAEO,MAAM,qBAAqB,CAAC,aAAqB;IACtD,6CAA6C;IAC7C,0CAA0C;IAC1C,IAAI,cAAc,GAAG;QACnB,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAW,GAAG,CAAC,GAAG,IAAM,IAAI;IAC1D;IAEA,kDAAkD;IAClD,uDAAuD;IACvD,IAAI,eAAe,GAAG;QACpB,OAAO;YAAC;YAAG;YAAG;YAAG;YAAO,aAAa;YAAG;SAAW;IACrD;IAEA,iDAAiD;IACjD,uDAAuD;IACvD,IAAI,eAAe,aAAa,GAAG;QACjC,OAAO;YAAC;YAAG;YAAG;YAAO,aAAa;YAAG,aAAa;YAAG;SAAW;IAClE;IAEA,kDAAkD;IAClD,wEAAwE;IACxE,uCAAuC;IACvC,OAAO;QACL;QACA;QACA,cAAc;QACd;QACA,cAAc;QACd;QACA;KACD;AACH"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/lib/data.ts"],"sourcesContent":["import { sql } from \"@vercel/postgres\";\nimport {\n  CustomerField,\n  CustomersTableType,\n  FormattedCustomersTable,\n  InvoiceForm,\n  InvoicesTable,\n  LatestInvoiceRaw,\n  Revenue,\n} from \"./definitions\";\nimport { formatCurrency } from \"./utils\";\n\nexport async function fetchRevenue() {\n  try {\n    // Artificially delay a response for demo purposes.\n    // Don't do this in production :)\n\n    console.log(\"Fetching revenue data...\");\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    const data = await sql<Revenue>`SELECT * FROM revenue`;\n\n    console.log(\"Data fetch completed after 3 seconds.\");\n\n    return data.rows;\n  } catch (error) {\n    console.error(\"Database Error:\", error);\n    throw new Error(\"Failed to fetch revenue data.\");\n  }\n}\n\nexport async function fetchLatestInvoices() {\n  try {\n    const data = await sql<LatestInvoiceRaw>`\n      SELECT invoices.amount, customers.name, customers.image_url, customers.email, invoices.id\n      FROM invoices\n      JOIN customers ON invoices.customer_id = customers.id\n      ORDER BY invoices.date DESC\n      LIMIT 5`;\n\n    const latestInvoices = data.rows.map((invoice) => ({\n      ...invoice,\n      amount: formatCurrency(invoice.amount),\n    }));\n    return latestInvoices;\n  } catch (error) {\n    console.error(\"Database Error:\", error);\n    throw new Error(\"Failed to fetch the latest invoices.\");\n  }\n}\n\nexport async function fetchCardData() {\n  try {\n    // You can probably combine these into a single SQL query\n    // However, we are intentionally splitting them to demonstrate\n    // how to initialize multiple queries in parallel with JS.\n    const invoiceCountPromise = sql`SELECT COUNT(*) FROM invoices`;\n    const customerCountPromise = sql`SELECT COUNT(*) FROM customers`;\n    const invoiceStatusPromise = sql`SELECT\n         SUM(CASE WHEN status = 'paid' THEN amount ELSE 0 END) AS \"paid\",\n         SUM(CASE WHEN status = 'pending' THEN amount ELSE 0 END) AS \"pending\"\n         FROM invoices`;\n\n    const data = await Promise.all([\n      invoiceCountPromise,\n      customerCountPromise,\n      invoiceStatusPromise,\n    ]);\n\n    const numberOfInvoices = Number(data[0].rows[0].count ?? \"0\");\n    const numberOfCustomers = Number(data[1].rows[0].count ?? \"0\");\n    const totalPaidInvoices = formatCurrency(data[2].rows[0].paid ?? \"0\");\n    const totalPendingInvoices = formatCurrency(data[2].rows[0].pending ?? \"0\");\n\n    return {\n      numberOfCustomers,\n      numberOfInvoices,\n      totalPaidInvoices,\n      totalPendingInvoices,\n    };\n  } catch (error) {\n    console.error(\"Database Error:\", error);\n    throw new Error(\"Failed to fetch card data.\");\n  }\n}\n\nconst ITEMS_PER_PAGE = 6;\nexport async function fetchFilteredInvoices(\n  query: string,\n  currentPage: number\n) {\n  const offset = (currentPage - 1) * ITEMS_PER_PAGE;\n\n  try {\n    const invoices = await sql<InvoicesTable>`\n      SELECT\n        invoices.id,\n        invoices.amount,\n        invoices.date,\n        invoices.status,\n        customers.name,\n        customers.email,\n        customers.image_url\n      FROM invoices\n      JOIN customers ON invoices.customer_id = customers.id\n      WHERE\n        customers.name ILIKE ${`%${query}%`} OR\n        customers.email ILIKE ${`%${query}%`} OR\n        invoices.amount::text ILIKE ${`%${query}%`} OR\n        invoices.date::text ILIKE ${`%${query}%`} OR\n        invoices.status ILIKE ${`%${query}%`}\n      ORDER BY invoices.date DESC\n      LIMIT ${ITEMS_PER_PAGE} OFFSET ${offset}\n    `;\n\n    return invoices.rows;\n  } catch (error) {\n    console.error(\"Database Error:\", error);\n    throw new Error(\"Failed to fetch invoices.\");\n  }\n}\n\nexport async function fetchInvoicesPages(query: string) {\n  try {\n    const count = await sql`SELECT COUNT(*)\n    FROM invoices\n    JOIN customers ON invoices.customer_id = customers.id\n    WHERE\n      customers.name ILIKE ${`%${query}%`} OR\n      customers.email ILIKE ${`%${query}%`} OR\n      invoices.amount::text ILIKE ${`%${query}%`} OR\n      invoices.date::text ILIKE ${`%${query}%`} OR\n      invoices.status ILIKE ${`%${query}%`}\n  `;\n\n    const totalPages = Math.ceil(Number(count.rows[0].count) / ITEMS_PER_PAGE);\n    return totalPages;\n  } catch (error) {\n    console.error(\"Database Error:\", error);\n    throw new Error(\"Failed to fetch total number of invoices.\");\n  }\n}\n\nexport async function fetchInvoiceById(id: string) {\n  try {\n    const data = await sql<InvoiceForm>`\n      SELECT\n        invoices.id,\n        invoices.customer_id,\n        invoices.amount,\n        invoices.status\n      FROM invoices\n      WHERE invoices.id = ${id};\n    `;\n\n    const invoice = data.rows.map((invoice) => ({\n      ...invoice,\n      // Convert amount from cents to dollars\n      amount: invoice.amount / 100,\n    }));\n\n    return invoice[0];\n  } catch (error) {\n    console.error(\"Database Error:\", error);\n    throw new Error(\"Failed to fetch invoice.\");\n  }\n}\n\nexport async function fetchCustomers() {\n  try {\n    const data = await sql<CustomerField>`\n      SELECT\n        id,\n        name\n      FROM customers\n      ORDER BY name ASC\n    `;\n\n    const customers = data.rows;\n    return customers;\n  } catch (err) {\n    console.error(\"Database Error:\", err);\n    throw new Error(\"Failed to fetch all customers.\");\n  }\n}\n\nexport async function fetchFilteredCustomers(query: string) {\n  try {\n    const data = await sql<CustomersTableType>`\n\t\tSELECT\n\t\t  customers.id,\n\t\t  customers.name,\n\t\t  customers.email,\n\t\t  customers.image_url,\n\t\t  COUNT(invoices.id) AS total_invoices,\n\t\t  SUM(CASE WHEN invoices.status = 'pending' THEN invoices.amount ELSE 0 END) AS total_pending,\n\t\t  SUM(CASE WHEN invoices.status = 'paid' THEN invoices.amount ELSE 0 END) AS total_paid\n\t\tFROM customers\n\t\tLEFT JOIN invoices ON customers.id = invoices.customer_id\n\t\tWHERE\n\t\t  customers.name ILIKE ${`%${query}%`} OR\n        customers.email ILIKE ${`%${query}%`}\n\t\tGROUP BY customers.id, customers.name, customers.email, customers.image_url\n\t\tORDER BY customers.name ASC\n\t  `;\n\n    const customers = data.rows.map((customer) => ({\n      ...customer,\n      total_pending: formatCurrency(customer.total_pending),\n      total_paid: formatCurrency(customer.total_paid),\n    }));\n\n    return customers;\n  } catch (err) {\n    console.error(\"Database Error:\", err);\n    throw new Error(\"Failed to fetch customer table.\");\n  }\n}\n\nexport async function fetchCustomerFormatedTableData(query: string) {\n  try {\n    const data = await sql<FormattedCustomersTable>`\n\t\tSELECT\n      customers.id,\n      customers.name,\n      customers.email,\n      customers.image_url,\n      COUNT(invoices.id) AS total_invoices,\n      SUM(CASE WHEN invoices.status = 'pending' THEN invoices.amount ELSE 0 END) AS total_pending,\n\t\t  SUM(CASE WHEN invoices.status = 'paid' THEN invoices.amount ELSE 0 END) AS total_paid\n    FROM customers\n    LEFT JOIN invoices ON customers.id = invoices.customer_id\n    WHERE\n        customers.name ILIKE ${`%${query}%`} OR\n        customers.email ILIKE ${`%${query}%`}\n    GROUP BY customers.id, customers.name, customers.email, customers.image_url\n    ORDER BY customers.name ASC\n    `;\n\n    const customers = data.rows.map((customer) => ({\n      ...customer,\n      total_pending: formatCurrency(Number(customer.total_pending)),\n      total_paid: formatCurrency(Number(customer.total_paid)),\n    }));\n\n    return customers;\n  } catch (err) {\n    console.error(\"Database Error:\", err);\n    throw new Error(\"Failed to fetch customer table.\");\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/skeletons.tsx"],"sourcesContent":["// Loading animation\nconst shimmer =\n  'before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/60 before:to-transparent';\n\nexport function CardSkeleton() {\n  return (\n    <div\n      className={`${shimmer} relative overflow-hidden rounded-xl bg-gray-100 p-2 shadow-sm`}\n    >\n      <div className=\"flex p-4\">\n        <div className=\"h-5 w-5 rounded-md bg-gray-200\" />\n        <div className=\"ml-2 h-6 w-16 rounded-md bg-gray-200 text-sm font-medium\" />\n      </div>\n      <div className=\"flex items-center justify-center truncate rounded-xl bg-white px-4 py-8\">\n        <div className=\"h-7 w-20 rounded-md bg-gray-200\" />\n      </div>\n    </div>\n  );\n}\n\nexport function CardsSkeleton() {\n  return (\n    <>\n      <CardSkeleton />\n      <CardSkeleton />\n      <CardSkeleton />\n      <CardSkeleton />\n    </>\n  );\n}\n\nexport function RevenueChartSkeleton() {\n  return (\n    <div className={`${shimmer} relative w-full overflow-hidden md:col-span-4`}>\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\n      <div className=\"rounded-xl bg-gray-100 p-4\">\n        <div className=\"sm:grid-cols-13 mt-0 grid h-[410px] grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\" />\n        <div className=\"flex items-center pb-2 pt-6\">\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function InvoiceSkeleton() {\n  return (\n    <div className=\"flex flex-row items-center justify-between border-b border-gray-100 py-4\">\n      <div className=\"flex items-center\">\n        <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-200\" />\n        <div className=\"min-w-0\">\n          <div className=\"h-5 w-40 rounded-md bg-gray-200\" />\n          <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n      <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\n    </div>\n  );\n}\n\nexport function LatestInvoicesSkeleton() {\n  return (\n    <div\n      className={`${shimmer} relative flex w-full flex-col overflow-hidden md:col-span-4`}\n    >\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\n      <div className=\"flex grow flex-col justify-between rounded-xl bg-gray-100 p-4\">\n        <div className=\"bg-white px-6\">\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n        </div>\n        <div className=\"flex items-center pb-2 pt-6\">\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function DashboardSkeleton() {\n  return (\n    <>\n      <div\n        className={`${shimmer} relative mb-4 h-8 w-36 overflow-hidden rounded-md bg-gray-100`}\n      />\n      <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\n        <CardSkeleton />\n        <CardSkeleton />\n        <CardSkeleton />\n        <CardSkeleton />\n      </div>\n      <div className=\"mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8\">\n        <RevenueChartSkeleton />\n        <LatestInvoicesSkeleton />\n      </div>\n    </>\n  );\n}\n\nexport function TableRowSkeleton() {\n  return (\n    <tr className=\"w-full border-b border-gray-100 last-of-type:border-none [&:first-child>td:first-child]:rounded-tl-lg [&:first-child>td:last-child]:rounded-tr-lg [&:last-child>td:first-child]:rounded-bl-lg [&:last-child>td:last-child]:rounded-br-lg\">\n      {/* Customer Name and Image */}\n      <td className=\"relative overflow-hidden whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n      </td>\n      {/* Email */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-32 rounded bg-gray-100\"></div>\n      </td>\n      {/* Amount */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Date */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Status */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Actions */}\n      <td className=\"whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex justify-end gap-3\">\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\n        </div>\n      </td>\n    </tr>\n  );\n}\n\nexport function InvoicesMobileSkeleton() {\n  return (\n    <div className=\"mb-2 w-full rounded-md bg-white p-4\">\n      <div className=\"flex items-center justify-between border-b border-gray-100 pb-8\">\n        <div className=\"flex items-center\">\n          <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n        </div>\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </div>\n      <div className=\"flex w-full items-center justify-between pt-4\">\n        <div>\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n          <div className=\"mt-2 h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n        <div className=\"flex justify-end gap-2\">\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function InvoicesTableSkeleton() {\n  return (\n    <div className=\"mt-6 flow-root\">\n      <div className=\"inline-block min-w-full align-middle\">\n        <div className=\"rounded-lg bg-gray-50 p-2 md:pt-0\">\n          <div className=\"md:hidden\">\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n          </div>\n          <table className=\"hidden min-w-full text-gray-900 md:table\">\n            <thead className=\"rounded-lg text-left text-sm font-normal\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">\n                  Customer\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Email\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Amount\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Date\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Status\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"relative pb-4 pl-3 pr-6 pt-2 sm:pr-6\"\n                >\n                  <span className=\"sr-only\">Edit</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport function CustomersTableRowSkeleton() {\n  return (\n    <>\n    <tr className=\"w-full border-b border-gray-100 last-of-type:border-none [&:first-child>td:first-child]:rounded-tl-lg [&:first-child>td:last-child]:rounded-tr-lg [&:last-child>td:first-child]:rounded-bl-lg [&:last-child>td:last-child]:rounded-br-lg\">\n      {/* Customer Name and Image */}\n      <td className=\"relative overflow-hidden whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n      </td>\n      {/* Email */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-32 rounded bg-gray-100\"></div>\n      </td>\n      {/* Total Invoices */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Total Pending Amount */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Total Paid Amount */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n    </tr>\n    </>\n  );\n}\n\nexport function CustomersTableSkeleton() {\n  return (\n    <div className=\"mt-6 flow-root\">\n      <div className=\"inline-block min-w-full align-middle\">\n          <table className=\"hidden min-w-full text-gray-900 md:table\">\n            <thead className=\"rounded-lg text-left text-sm font-normal\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">\n                  Customer\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Email\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Total Invoices\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Total Pending\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Total Paid\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              <CustomersTableRowSkeleton />\n              <CustomersTableRowSkeleton />\n              <CustomersTableRowSkeleton />\n              <CustomersTableRowSkeleton />\n              <CustomersTableRowSkeleton />\n              <CustomersTableRowSkeleton />\n            </tbody>\n          </table>\n        </div>\n      </div>\n  );\n}"],"names":[],"mappings":"AAAA,oBAAoB;;;;;;;;;;;;;;;;AACpB,MAAM,UACJ;AAEK,SAAS;IACd,qBACE,6WAAC;QACC,WAAW,GAAG,QAAQ,8DAA8D,CAAC;;0BAErF,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;;;;;kCACf,6WAAC;wBAAI,WAAU;;;;;;;;;;;;0BAEjB,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAIvB;AAEO,SAAS;IACd,qBACE;;0BACE,6WAAC;;;;;0BACD,6WAAC;;;;;0BACD,6WAAC;;;;;0BACD,6WAAC;;;;;;;AAGP;AAEO,SAAS;IACd,qBACE,6WAAC;QAAI,WAAW,GAAG,QAAQ,8CAA8C,CAAC;;0BACxE,6WAAC;gBAAI,WAAU;;;;;;0BACf,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;;;;;kCACf,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEO,SAAS;IACd,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;;;;;kCACf,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;0BAGnB,6WAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;AAEO,SAAS;IACd,qBACE,6WAAC;QACC,WAAW,GAAG,QAAQ,4DAA4D,CAAC;;0BAEnF,6WAAC;gBAAI,WAAU;;;;;;0BACf,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;;;;;;;kCAEH,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEe,SAAS;IACtB,qBACE;;0BACE,6WAAC;gBACC,WAAW,GAAG,QAAQ,8DAA8D,CAAC;;;;;;0BAEvF,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;;;;;kCACD,6WAAC;;;;;kCACD,6WAAC;;;;;kCACD,6WAAC;;;;;;;;;;;0BAEH,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;;;;;kCACD,6WAAC;;;;;;;;;;;;;AAIT;AAEO,SAAS;IACd,qBACE,6WAAC;QAAG,WAAU;;0BAEZ,6WAAC;gBAAG,WAAU;0BACZ,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;;;;;;sCACf,6WAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;0BAInB,6WAAC;gBAAG,WAAU;0BACZ,cAAA,6WAAC;oBAAI,WAAU;;;;;;;;;;;0BAGjB,6WAAC;gBAAG,WAAU;0BACZ,cAAA,6WAAC;oBAAI,WAAU;;;;;;;;;;;0BAGjB,6WAAC;gBAAG,WAAU;0BACZ,cAAA,6WAAC;oBAAI,WAAU;;;;;;;;;;;0BAGjB,6WAAC;gBAAG,WAAU;0BACZ,cAAA,6WAAC;oBAAI,WAAU;;;;;;;;;;;0BAGjB,6WAAC;gBAAG,WAAU;0BACZ,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;;;;;;sCACf,6WAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEO,SAAS;IACd,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;kCAEjB,6WAAC;wBAAI,WAAU;;;;;;;;;;;;0BAEjB,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;;0CACC,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;kCAEjB,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEO,SAAS;IACd,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;;;;;;;kCAEH,6WAAC;wBAAM,WAAU;;0CACf,6WAAC;gCAAM,WAAU;0CACf,cAAA,6WAAC;;sDACC,6WAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAgC;;;;;;sDAG1D,6WAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAwB;;;;;;sDAGlD,6WAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAwB;;;;;;sDAGlD,6WAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAwB;;;;;;sDAGlD,6WAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAwB;;;;;;sDAGlD,6WAAC;4CACC,OAAM;4CACN,WAAU;sDAEV,cAAA,6WAAC;gDAAK,WAAU;0DAAU;;;;;;;;;;;;;;;;;;;;;;0CAIhC,6WAAC;gCAAM,WAAU;;kDACf,6WAAC;;;;;kDACD,6WAAC;;;;;kDACD,6WAAC;;;;;kDACD,6WAAC;;;;;kDACD,6WAAC;;;;;kDACD,6WAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf;AAGO,SAAS;IACd,qBACE;kBACA,cAAA,6WAAC;YAAG,WAAU;;8BAEZ,6WAAC;oBAAG,WAAU;8BACZ,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;8BAInB,6WAAC;oBAAG,WAAU;8BACZ,cAAA,6WAAC;wBAAI,WAAU;;;;;;;;;;;8BAGjB,6WAAC;oBAAG,WAAU;8BACZ,cAAA,6WAAC;wBAAI,WAAU;;;;;;;;;;;8BAGjB,6WAAC;oBAAG,WAAU;8BACZ,cAAA,6WAAC;wBAAI,WAAU;;;;;;;;;;;8BAGjB,6WAAC;oBAAG,WAAU;8BACZ,cAAA,6WAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAKvB;AAEO,SAAS;IACd,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC;YAAI,WAAU;sBACX,cAAA,6WAAC;gBAAM,WAAU;;kCACf,6WAAC;wBAAM,WAAU;kCACf,cAAA,6WAAC;;8CACC,6WAAC;oCAAG,OAAM;oCAAM,WAAU;8CAAgC;;;;;;8CAG1D,6WAAC;oCAAG,OAAM;oCAAM,WAAU;8CAAwB;;;;;;8CAGlD,6WAAC;oCAAG,OAAM;oCAAM,WAAU;8CAAwB;;;;;;8CAGlD,6WAAC;oCAAG,OAAM;oCAAM,WAAU;8CAAwB;;;;;;8CAGlD,6WAAC;oCAAG,OAAM;oCAAM,WAAU;8CAAwB;;;;;;;;;;;;;;;;;kCAKtD,6WAAC;wBAAM,WAAU;;0CACf,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;0CACD,6WAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMf"}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/search.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/search.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/search.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA"}},
    {"offset": {"line": 1332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1338, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/search.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/search.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/search.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiQ,GAC9R,+BACA"}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/ui/customers/table.tsx"],"sourcesContent":["import Image from 'next/image';\nimport { lusitana } from '@/app/ui/fonts';\nimport {FormattedCustomersTable} from '@/app/lib/definitions';\nimport { fetchCustomerFormatedTableData } from '@/app/lib/data';\n\nexport default async function CustomersTable({\n  query,\n}: {\n  customers: FormattedCustomersTable[];\n  query: string;\n}) {\n  const customers = await fetchCustomerFormatedTableData(query);\n  return (\n    <div className=\"w-full\">\n      <h1 className={`${lusitana.className} mb-8 text-xl md:text-2xl`}>\n        Customers\n      </h1>\n      <Search placeholder=\"Search customers...\" />\n      <div className=\"mt-6 flow-root\">\n        <div className=\"overflow-x-auto\">\n          <div className=\"inline-block min-w-full align-middle\">\n            <div className=\"overflow-hidden rounded-md bg-gray-50 p-2 md:pt-0\">\n              <div className=\"md:hidden\">\n                {customers?.map((customer) => (\n                  <div\n                    key={customer.id}\n                    className=\"mb-2 w-full rounded-md bg-white p-4\"\n                  >\n                    <div className=\"flex items-center justify-between border-b pb-4\">\n                      <div>\n                        <div className=\"mb-2 flex items-center\">\n                          <div className=\"flex items-center gap-3\">\n                            <Image\n                              src={customer.image_url}\n                              className=\"rounded-full\"\n                              alt={`${customer.name}'s profile picture`}\n                              width={28}\n                              height={28}\n                            />\n                            <p>{customer.name}</p>\n                          </div>\n                        </div>\n                        <p className=\"text-sm text-gray-500\">\n                          {customer.email}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex w-full items-center justify-between border-b py-5\">\n                      <div className=\"pt-4 text-sm\">\n                        <p>{customer.total_invoices}</p>\n                      </div>\n                      <div className=\"flex w-1/2 flex-col\">\n                        <p className=\"text-xs\">Pending</p>\n                        <p className=\"font-medium\">{customer.total_pending}</p>\n                      </div>\n                      <div className=\"flex w-1/2 flex-col\">\n                        <p className=\"text-xs\">Paid</p>\n                        <p className=\"font-medium\">{customer.total_paid}</p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <table className=\"hidden min-w-full rounded-md text-gray-900 md:table\">\n                <thead className=\"rounded-md bg-gray-50 text-left text-sm font-normal\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">\n                      Name\n                    </th>\n                    <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                      Email\n                    </th>\n                    <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                      Total Invoices\n                    </th>\n                    <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                      Total Pending\n                    </th>\n                    <th scope=\"col\" className=\"px-4 py-5 font-medium\">\n                      Total Paid\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody className=\"divide-y divide-gray-200 text-gray-900\">\n                  {customers.map((customer) => (\n                    <tr key={customer.id} className=\"group\">\n                      <td className=\"whitespace-nowrap bg-white py-5 pl-4 pr-3 text-sm text-black group-first-of-type:rounded-md group-last-of-type:rounded-md sm:pl-6\">\n                        <div className=\"flex items-center gap-3\">\n                          <Image\n                            src={customer.image_url}\n                            className=\"rounded-full\"\n                            alt={`${customer.name}'s profile picture`}\n                            width={28}\n                            height={28}\n                          />\n                          <p>{customer.name}</p>\n                        </div>\n                      </td>\n                      <td className=\"whitespace-nowrap bg-white px-4 py-5 text-sm\">\n                        {customer.email}\n                      </td>\n                      <td className=\"whitespace-nowrap bg-white px-4 py-5 text-sm\">\n                        {customer.total_invoices}\n                      </td>\n                      <td className=\"whitespace-nowrap bg-white px-4 py-5 text-sm\">\n                        {customer.total_pending}\n                      </td>\n                      <td className=\"whitespace-nowrap bg-white px-4 py-5 text-sm group-first-of-type:rounded-md group-last-of-type:rounded-md\">\n                        {customer.total_paid}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAFA;;;;;AAIe,eAAe,eAAe,EAC3C,KAAK,EAIN;IACC,MAAM,YAAY,MAAM,CAAA,GAAA,kHAAA,CAAA,iCAA8B,AAAD,EAAE;IACvD,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,yBAAyB,CAAC;0BAAE;;;;;;0BAGjE,6WAAC;gBAAO,aAAY;;;;;;0BACpB,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAI,WAAU;kCACb,cAAA,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCAAI,WAAU;8CACZ,WAAW,IAAI,CAAC,yBACf,6WAAC;4CAEC,WAAU;;8DAEV,6WAAC;oDAAI,WAAU;8DACb,cAAA,6WAAC;;0EACC,6WAAC;gEAAI,WAAU;0EACb,cAAA,6WAAC;oEAAI,WAAU;;sFACb,6WAAC,4PAAA,CAAA,UAAK;4EACJ,KAAK,SAAS,SAAS;4EACvB,WAAU;4EACV,KAAK,GAAG,SAAS,IAAI,CAAC,kBAAkB,CAAC;4EACzC,OAAO;4EACP,QAAQ;;;;;;sFAEV,6WAAC;sFAAG,SAAS,IAAI;;;;;;;;;;;;;;;;;0EAGrB,6WAAC;gEAAE,WAAU;0EACV,SAAS,KAAK;;;;;;;;;;;;;;;;;8DAIrB,6WAAC;oDAAI,WAAU;;sEACb,6WAAC;4DAAI,WAAU;sEACb,cAAA,6WAAC;0EAAG,SAAS,cAAc;;;;;;;;;;;sEAE7B,6WAAC;4DAAI,WAAU;;8EACb,6WAAC;oEAAE,WAAU;8EAAU;;;;;;8EACvB,6WAAC;oEAAE,WAAU;8EAAe,SAAS,aAAa;;;;;;;;;;;;sEAEpD,6WAAC;4DAAI,WAAU;;8EACb,6WAAC;oEAAE,WAAU;8EAAU;;;;;;8EACvB,6WAAC;oEAAE,WAAU;8EAAe,SAAS,UAAU;;;;;;;;;;;;;;;;;;;2CAhC9C,SAAS,EAAE;;;;;;;;;;8CAsCtB,6WAAC;oCAAM,WAAU;;sDACf,6WAAC;4CAAM,WAAU;sDACf,cAAA,6WAAC;;kEACC,6WAAC;wDAAG,OAAM;wDAAM,WAAU;kEAAgC;;;;;;kEAG1D,6WAAC;wDAAG,OAAM;wDAAM,WAAU;kEAAwB;;;;;;kEAGlD,6WAAC;wDAAG,OAAM;wDAAM,WAAU;kEAAwB;;;;;;kEAGlD,6WAAC;wDAAG,OAAM;wDAAM,WAAU;kEAAwB;;;;;;kEAGlD,6WAAC;wDAAG,OAAM;wDAAM,WAAU;kEAAwB;;;;;;;;;;;;;;;;;sDAMtD,6WAAC;4CAAM,WAAU;sDACd,UAAU,GAAG,CAAC,CAAC,yBACd,6WAAC;oDAAqB,WAAU;;sEAC9B,6WAAC;4DAAG,WAAU;sEACZ,cAAA,6WAAC;gEAAI,WAAU;;kFACb,6WAAC,4PAAA,CAAA,UAAK;wEACJ,KAAK,SAAS,SAAS;wEACvB,WAAU;wEACV,KAAK,GAAG,SAAS,IAAI,CAAC,kBAAkB,CAAC;wEACzC,OAAO;wEACP,QAAQ;;;;;;kFAEV,6WAAC;kFAAG,SAAS,IAAI;;;;;;;;;;;;;;;;;sEAGrB,6WAAC;4DAAG,WAAU;sEACX,SAAS,KAAK;;;;;;sEAEjB,6WAAC;4DAAG,WAAU;sEACX,SAAS,cAAc;;;;;;sEAE1B,6WAAC;4DAAG,WAAU;sEACX,SAAS,aAAa;;;;;;sEAEzB,6WAAC;4DAAG,WAAU;sEACX,SAAS,UAAU;;;;;;;mDAvBf,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCxC"}},
    {"offset": {"line": 1728, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1734, "column": 0}, "map": {"version":3,"sources":["file:///Users/diana/Learning/01-Web-Dev/16-Nextjs/nextjs-dashboard/app/dashboard/customers/page.tsx"],"sourcesContent":["import { lusitana } from '@/app/ui/fonts';\nimport { Metadata } from 'next';\nimport { Suspense } from 'react';\nimport {fetchCustomerFormatedTableData} from '@/app/lib/data';\nimport { CustomersTableRowSkeleton, CustomersTableSkeleton } from '@/app/ui/skeletons';\nimport CustomersTable from '@/app/ui/customers/table';\n\nexport const metadata: Metadata = {\n  title: 'Customers',\n};\n\nexport default async function Page(props: {\n  searchParams?: Promise<{\n      query?: string;\n  }>;\n}) {\n  const searchParams = await props.searchParams;\n  const query = searchParams?.query || '';\n  const customers = await fetchCustomerFormatedTableData(query);\n\n    return (\n      <div className=\"w-full\"> \n            <Suspense key={query} fallback={<CustomersTableSkeleton/>}>\n                <CustomersTable query={query} customers={customers}/>\n            </Suspense>\n      </div>\n    )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;AACT;AAEe,eAAe,KAAK,KAIlC;IACC,MAAM,eAAe,MAAM,MAAM,YAAY;IAC7C,MAAM,QAAQ,cAAc,SAAS;IACrC,MAAM,YAAY,MAAM,CAAA,GAAA,kHAAA,CAAA,iCAA8B,AAAD,EAAE;IAErD,qBACE,6WAAC;QAAI,WAAU;kBACT,cAAA,6WAAC,oUAAA,CAAA,WAAQ;YAAa,wBAAU,6WAAC,uHAAA,CAAA,yBAAsB;;;;;sBACnD,cAAA,6WAAC,gIAAA,CAAA,UAAc;gBAAC,OAAO;gBAAO,WAAW;;;;;;WAD9B;;;;;;;;;;AAK3B"}},
    {"offset": {"line": 1782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1796, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}